-- PURPOSE:
-- This query joins the 'customers' and 'orders' tables 
-- to show each customer's name alongside their order total.

-- USE CASE:
-- Useful for generating reports that combine customer information 
-- with their purchase history, such as total spending or individual receipts.

SELECT customers.name, orders.order_total
FROM customers
JOIN orders ON customers.id = orders.customer_id;

-- PURPOSE:
-- This query calculates the total salary paid out within each department 
-- by grouping employee records based on their department.

-- USE CASE:
-- Useful for HR or finance teams to understand how salary expenses are 
-- distributed across departments, which can inform budgeting or restructuring decisions.

SELECT department, SUM(salary) AS total_salary
FROM employees
GROUP BY department;


-- PURPOSE:
-- This query shows which departments have a combined total salary 
-- greater than $100,000.

-- USE CASE:
-- Helps identify high-cost departments for budgeting, financial reviews, 
-- or resource allocation decisions.

SELECT department, SUM(salary) AS total_salary
FROM employees
GROUP BY department
HAVING SUM(salary) > 100000;

-- PURPOSE:
-- This query retrieves all employees whose salary is above 
-- the average salary of all employees in the company.

-- USE CASE:
-- Useful for identifying top earners, benchmarking salaries, 
-- or flagging outliers for compensation analysis.

SELECT *
FROM employees
WHERE salary > (
    SELECT AVG(salary)
    FROM employees
);

-- PURPOSE:
-- This query creates a new table called 'previous_employees' 
-- to store information about former employees, including their hire and end dates.

-- USE CASE:
-- Useful for keeping historical employment records for reporting, 
-- reference checks, or calculating turnover metrics.

CREATE TABLE previous_employees (
    id INTEGER PRIMARY KEY,
    name TEXT,
    hire_date TEXT,
    end_date TEXT
);

-- PURPOSE:
-- This query retrieves the email addresses of customers whose emails end with 'gmail.com'.

-- USE CASE:
-- Useful for targeting Gmail users for a specific campaign, 
-- analyzing customer email domain trends, or filtering contact lists by provider.

SELECT email
FROM customers
WHERE email LIKE '%@gmail.com';
